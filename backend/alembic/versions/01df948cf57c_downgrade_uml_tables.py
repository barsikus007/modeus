"""Downgrade UML tables

Revision ID: 01df948cf57c
Revises: 5f6263c5ed49
Create Date: 2022-03-14 00:47:44.251447

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '01df948cf57c'
down_revision = '5f6263c5ed49'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('grade')
    op.drop_table('attendance')
    op.drop_table('minor')
    op.drop_table('makeup')
    op.drop_table('enrollment')
    op.drop_table('coursemajorlink')
    op.drop_table('class')
    op.drop_table('assignment')
    op.drop_table('visitingfaculty')
    op.drop_index(op.f('ix_student_name'), table_name='student')
    op.drop_table('student')
    op.drop_table('permanentfaculty')
    op.drop_table('major')
    op.drop_table('course')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('assessment_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_weight', sa.Float(), nullable=False),
    sa.Column('module', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exam_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('major',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ru_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fgos_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permanentfaculty',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_rus', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mail', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_name'), 'student', ['name'], unique=False)
    op.create_table('visitingfaculty',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_rus', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mail', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('pass_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('descr', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursemajorlink',
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['major.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'major_id')
    )
    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('makeup',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('pass_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('is_pass', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('minor',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ru_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fgos_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance',
    sa.Column('enrollment_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollment.id'], ),
    sa.PrimaryKeyConstraint('enrollment_id', 'class_id')
    )
    op.create_table('grade',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'assignment_id')
    )
    # ### end Alembic commands ###
